# Sync changes to GitHub, by creating a branch and push the content
github_push_develop:
  stage: release
  # needs:
  # - update_gitlab_dist
  variables:
    BRANCH: "bhavin_dp"
    CI_COMMIT_TAG: "v4.30.0_test"
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - pip3 install poetry
    - git submodule update --init contentctl
    - cd contentctl
    - git checkout main
    - poetry install
  script:
    # - poetry run contentctl -p ../ --enable_enrichment build
    # - poetry run contentctl -p ../ --enable_enrichment build -t ssa
    # - poetry run contentctl -p ../ --enable_enrichment build -t api
    - cd ..
    - git config user.email "research@splunk.com"
    - git config user.name "research bot"
    - git remote add github_origin git@github.com:splunk/security_content.git
    - git fetch --all
    - git checkout -b $BRANCH
    - git merge develop -X theirs
    - poetry run contentctl -p ../ build
    - git add .
    - git rm CODEOWNERS  
    - git commit -m "removing CODEOWNERS and updating dist"
    - git push -u github_origin $BRANCH
    # - 'curl -X POST -H "Authorization: token $CREATE_GH_RELEASE_PR" -H "Accept: application/vnd.github.v3+json" -d "{\"title\":\"Release $CI_COMMIT_TAG\", \"body\":\"This PR contains content for ESCU - $CI_COMMIT_TAG\", \"head\":\"develop\", \"base\":\"gitlab_release_$CI_COMMIT_TAG\"}" https://api.github.com/repos/splunk/security_content/pulls'
  # rules:
  #   - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]$/'
  #     when: on_success