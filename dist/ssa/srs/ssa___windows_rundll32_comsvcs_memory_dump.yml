name: Windows Rundll32 Comsvcs Memory Dump
id: 76bb9e35-f314-4c3d-a385-83c72a13ce4e
version: 5
description: The following analytic identifies memory dumping using comsvcs.dll with
  the minidump function with `rundll32.exe`. This technique is common with adversaries
  who would like to dump the memory of lsass.exe.
search: ' | from read_ba_enriched_events() | eval timestamp = ucast(map_get(input_event,"time"),"long",
  null) | eval metadata = ucast(map_get(input_event, "metadata"),"map<string, any>",
  null) | eval metadata_uid = ucast(map_get(metadata, "uid"),"string", null) | eval
  process=ucast(map_get(input_event,"process"), "map<string, any>", null) | eval process_pid=ucast(map_get(process,"pid"),
  "string", null) | eval process_file=ucast(map_get(process,"file"), "map<string,
  any>", null) | eval process_file_path=ucast(map_get(process_file,"path"), "string",
  null) | eval process_file_name=ucast(map_get(process_file,"name"), "string", null)
  | eval process_cmd_line=ucast(map_get(process,"cmd_line"), "string", null) | eval
  process_user=ucast(map_get(process,"user"), "map<string, any>", null) | eval process_user_name=ucast(map_get(process_user,"name"),
  "string", null) | eval actor=ucast(map_get(input_event,"actor"), "map<string, any>",
  null) | eval actor_process=ucast(map_get(actor,"process"), "map<string, any>", null)
  | eval actor_process_pid=ucast(map_get(actor_process,"pid"), "string", null) | eval
  actor_process_file=ucast(map_get(actor_process,"file"), "map<string, any>", null)
  | eval actor_process_file_path=ucast(map_get(actor_process_file,"path"), "string",
  null) | eval actor_process_file_name=ucast(map_get(actor_process_file,"name"), "string",
  null) | eval device=ucast(map_get(input_event,"device"), "map<string, any>", null)
  | eval device_hostname=ucast(map_get(device,"hostname"), "string", null) | where
  (match_regex(process_cmd_line, /(?i)minidump/)=true AND process_file_name="rundll32.exe")
  AND match_regex(process_cmd_line, /(?i)comsvcs.dll/)=true 
  | eval body=create_map(
    "devices", [
        create_map(
            "hostname", device_hostname, "type_id", 0, "uuid", ucast(map_get(device,"uuid"), "string", null)
        )
    ],
    "time", timestamp,
    "evidence", create_map("process.user.name", process_user_name, "device.hostname", device_hostname, "process.file.name", process_file_name, "process.cmd_line", process_cmd_line),
    "message", concat("Windows Rundll32 Comsvcs Memory Dump has been triggered on ", device_hostname, " by ", process_user_name, "."),
    "users", [
        create_map(
            "name", process_user_name, "uuid", ucast(map_get(process_user,"uuid"), "string", null)
        )
    ],
    "activity_id", 1,
    "category_uid", 2,
    "class_uid", 102001,
    "risk_level_id", 2,
    "risk_score", 40,
    "severity_id", 0,
    "rule", create_map("name", "Windows Rundll32 Comsvcs Memory Dump", "uid", "76bb9e35-f314-4c3d-a385-83c72a13ce4e", "type", "Streaming"),
    "metadata", create_map("customer_uid", ucast(map_get(metadata,"customer_uid"), "string", null), "product", create_map("name", "Behavior Analytics", "vendor_name", "Splunk"), "version", "1.0.0-rc.2", "logged_time", time()),
    "type_uid", 10200101,
    "start_time", timestamp,
    "end_time", timestamp
  )
  | into write_ba_finding_events();'
how_to_implement: You must be ingesting endpoint data that tracks process activity,
  including Windows command line logging. You can see how we test this with [Event
  Code 4688](https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventID=4688a)
  on the [attack_range](https://github.com/splunk/attack_range/blob/develop/ansible/roles/windows_common/tasks/windows-enable-4688-cmd-line-audit.yml).
known_false_positives: False positives should be limited, filter as needed.
references:
- https://2017.zeronights.org/wp-content/uploads/materials/ZN17_Kheirkhabarov_Hunting_for_Credentials_Dumping_in_Windows_Environment.pdf
- https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003.001/T1003.001.md#atomic-test-3---dump-lsassexe-memory-using-comsvcsdll
tags:
  required_fields:
  - process.user.name
  - device.hostname
  - process.file.name
  - process.cmd_line
  risk_score: 40
  security_domain: endpoint
  risk_severity: low
  research_site_url: https://research.splunk.com/endpoint/76bb9e35-f314-4c3d-a385-83c72a13ce4e/
  event_schema: ocsf
  mappings:
  - ocsf: process.pid
    cim: process_id
  - ocsf: process.file.path
    cim: process_path
  - ocsf: process.file.name
    cim: process_name
  - ocsf: process.cmd_line
    cim: process
  - ocsf: process.user.name
    cim: user
  - ocsf: actor.process.pid
    cim: parent_process_id
  - ocsf: actor.process.file.path
    cim: parent_process_path
  - ocsf: actor.process.file.name
    cim: parent_process_name
  - ocsf: device.hostname
    cim: dest
  annotations:
    analytic_story:
    - Credential Dumping
    - Suspicious Rundll32 Activity
    cis20:
    - CIS 10
    kill_chain_phases:
    - Exploitation
    mitre_attack_id:
    - T1003.003
    - T1003
    nist:
    - DE.CM
test:
  name: Windows Rundll32 Comsvcs Memory Dump Unit Test
  tests:
  - name: Windows Rundll32 Comsvcs Memory Dump
    attack_data:
    - file_name: windows-security.log
      data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1003.001/atomic_red_team/windows-security.log
      source: WinEventLog:Security
runtime: SPL-DSP
