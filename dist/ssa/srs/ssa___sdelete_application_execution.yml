name: Sdelete Application Execution
id: fcc52b9a-4616-11ec-8454-acde48001122
version: 1
description: This analytic will detect the execution of sdelete.exe attempting to
  delete potentially important files that may related to adversary or insider threats
  to destroy evidence or information sabotage. Sdelete is a SysInternals utility meant
  to securely delete files on disk. This tool is commonly used to clear tracks and
  artifact on the targeted host.
search: ' | from read_ba_enriched_events() | eval timestamp = ucast(map_get(input_event,"time"),"long",
  null) | eval metadata = ucast(map_get(input_event, "metadata"),"map<string, any>",
  null) | eval metadata_uid = ucast(map_get(metadata, "uid"),"string", null) | eval
  process=ucast(map_get(input_event,"process"), "map<string, any>", null) | eval process_pid=ucast(map_get(process,"pid"),
  "string", null) | eval process_file=ucast(map_get(process,"file"), "map<string,
  any>", null) | eval process_file_path=ucast(map_get(process_file,"path"), "string",
  null) | eval process_file_name=ucast(map_get(process_file,"name"), "string", null)
  | eval process_cmd_line=ucast(map_get(process,"cmd_line"), "string", null) | eval
  actor=ucast(map_get(input_event,"actor"), "map<string, any>", null) | eval actor_user=ucast(map_get(actor,"user"),
  "map<string, any>", null) | eval actor_user_name=ucast(map_get(actor_user,"name"),
  "string", null) | eval actor_process=ucast(map_get(actor,"process"), "map<string,
  any>", null) | eval actor_process_pid=ucast(map_get(actor_process,"pid"), "string",
  null) | eval actor_process_file=ucast(map_get(actor_process,"file"), "map<string,
  any>", null) | eval actor_process_file_path=ucast(map_get(actor_process_file,"path"),
  "string", null) | eval actor_process_file_name=ucast(map_get(actor_process_file,"name"),
  "string", null) | eval device=ucast(map_get(input_event,"device"), "map<string,
  any>", null) | eval device_hostname=ucast(map_get(device,"hostname"), "string",
  null) | where (like(process_cmd_line, "%.xls%") OR like(process_cmd_line, "%.gz%")
  OR like(process_cmd_line, "%.tar%") OR like(process_cmd_line, "%.rar%") OR like(process_cmd_line,
  "%.zip%") OR like(process_cmd_line, "%.7z%") OR like(process_cmd_line, "%.bmp%")
  OR like(process_cmd_line, "%.gif%") OR like(process_cmd_line, "%.png%") OR like(process_cmd_line,
  "%.jpg%") OR like(process_cmd_line, "%.txt%") OR like(process_cmd_line, "%.log%")
  OR like(process_cmd_line, "%.key%") OR like(process_cmd_line, "%.pdf%") OR like(process_cmd_line,
  "%.rtf%") OR like(process_cmd_line, "%.ppt%") OR like(process_cmd_line, "%.xls%")
  OR like(process_cmd_line, "%.doc%") OR like(process_cmd_line, "%-nobanner%") OR
  like(process_cmd_line, "%/accepteula%") OR like(process_cmd_line, "%-z %") OR like(process_cmd_line,
  "%-s %") OR like(process_cmd_line, "%-q %") OR like(process_cmd_line, "%-r %") OR
  like(process_cmd_line, "%-p %") OR like(process_cmd_line, "%-f %") OR like(process_cmd_line,
  "%-c %")) AND like(process_file_name, "%sdelete%") 
  | eval body=create_map(
    "devices", [
        create_map(
            "hostname", device_hostname, "type_id", 0, "uuid", ucast(map_get(device,"uuid"), "string", null)
        )
    ],
    "time", timestamp,
    "evidence", create_map("process.pid", process_pid, "process.file.path", process_file_path, "process.file.name", process_file_name, "process.cmd_line", process_cmd_line, "actor.user.name", actor_user_name, "actor.process.pid", actor_process_pid, "actor.process.file.path", actor_process_file_path, "actor.process.file.name", actor_process_file_name, "device.hostname", device_hostname),
    "message", concat("Sdelete Application Execution has been triggered on ", device_hostname, " by ", actor_user_name, "."),
    "users", [
        create_map(
            "name", actor_user_name, "uid", ucast(map_get(actor_user,"uid"), "string", null)
        )
    ],
    "activity_id", 1,
    "category_uid", 2,
    "class_uid", 102001,
    "risk_level_id", 2,
    "risk_score", 42,
    "severity_id", 0,
    "rule", create_map("name", "Sdelete Application Execution", "uid", "fcc52b9a-4616-11ec-8454-acde48001122", "type", "Streaming"),
    "metadata", create_map("customer_uid", ucast(map_get(metadata,"customer_uid"), "string", null), "product", create_map("name", "Behavior Analytics", "vendor_name", "Splunk"), "version", "1.0.0-rc.2", "logged_time", time()),
    "type_uid", 10200101,
    "start_time", timestamp,
    "end_time", timestamp
  )
  | into write_ba_finding_events();'
how_to_implement: To successfully implement this search you need to be ingesting information
  on process that include the name of the process responsible for the changes from
  your endpoints into the `Endpoint` datamodel in the `Processes` node. In addition,
  confirm the latest CIM App 4.20 or higher is installed and the latest TA for the
  endpoint product.
known_false_positives: False positives should be limited, filter as needed.
references:
- https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/
- https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1485/T1485.md
tags:
  required_fields:
  - process.pid
  - process.file.path
  - process.file.name
  - process.cmd_line
  - actor.user.name
  - actor.process.pid
  - actor.process.file.path
  - actor.process.file.name
  - device.hostname
  risk_score: 42
  security_domain: endpoint
  risk_severity: low
  research_site_url: https://research.splunk.com/endpoint/fcc52b9a-4616-11ec-8454-acde48001122/
  event_schema: ocsf
  mappings:
  - ocsf: process.pid
    cim: process_id
  - ocsf: process.file.path
    cim: process_path
  - ocsf: process.file.name
    cim: process_name
  - ocsf: process.cmd_line
    cim: process
  - ocsf: actor.user.name
    cim: user
  - ocsf: actor.process.pid
    cim: parent_process_id
  - ocsf: actor.process.file.path
    cim: parent_process_path
  - ocsf: actor.process.file.name
    cim: parent_process_name
  - ocsf: device.hostname
    cim: dest
  annotations:
    analytic_story:
    - Information Sabotage
    - Insider Threat
    cis20:
    - CIS 10
    kill_chain_phases:
    - Actions on Objectives
    - Exploitation
    mitre_attack_id:
    - T1485
    - T1070.004
    - T1070
    nist:
    - DE.AE
test:
  name: Sdelete Application Execution Unit Test
  tests:
  - name: Sdelete Application Execution
    attack_data:
    - file_name: security.log
      data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1485/sdelete/security.log
      source: WinEventLog:Security
runtime: SPL-DSP
