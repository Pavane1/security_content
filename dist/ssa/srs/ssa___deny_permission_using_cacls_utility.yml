name: Deny Permission using Cacls Utility
id: b76eae28-cd25-11eb-9c92-acde48001122
version: 3
status: production
description: The following analytic identifies the use of `cacls.exe`, `icacls.exe`
  or `xcacls.exe` placing the deny permission on a file or directory. Adversaries
  perform this behavior to prevent responders from reviewing or gaining access to
  adversary files on disk.
search: ' | from read_ba_enriched_events() | eval timestamp = ucast(map_get(input_event,"time"),"long",
  null) | eval metadata = ucast(map_get(input_event, "metadata"),"map<string, any>",
  null) | eval metadata_uid = ucast(map_get(metadata, "uid"),"string", null) | eval
  process=ucast(map_get(input_event,"process"), "map<string, any>", null) | eval process_pid=ucast(map_get(process,"pid"),
  "string", null) | eval process_file=ucast(map_get(process,"file"), "map<string,
  any>", null) | eval process_file_path=ucast(map_get(process_file,"path"), "string",
  null) | eval process_file_name=ucast(map_get(process_file,"name"), "string", null)
  | eval process_cmd_line=ucast(map_get(process,"cmd_line"), "string", null) | eval
  actor=ucast(map_get(input_event,"actor"), "map<string, any>", null) | eval actor_user=ucast(map_get(actor,"user"),
  "map<string, any>", null) | eval actor_user_name=ucast(map_get(actor_user,"name"),
  "string", null) | eval actor_process=ucast(map_get(actor,"process"), "map<string,
  any>", null) | eval actor_process_pid=ucast(map_get(actor_process,"pid"), "string",
  null) | eval actor_process_file=ucast(map_get(actor_process,"file"), "map<string,
  any>", null) | eval actor_process_file_path=ucast(map_get(actor_process_file,"path"),
  "string", null) | eval actor_process_file_name=ucast(map_get(actor_process_file,"name"),
  "string", null) | eval device=ucast(map_get(input_event,"device"), "map<string,
  any>", null) | eval device_hostname=ucast(map_get(device,"hostname"), "string",
  null) | where (process_file_name="icacls.exe" OR process_file_name="xcacls.exe"
  OR process_file_name="cacls.exe") AND match_regex(process_cmd_line, /(?i)deny/)=true
  
  | eval body=create_map(
    "devices", [
        create_map(
            "hostname", device_hostname, "type_id", 0, "uuid", ucast(map_get(device,"uuid"), "string", null)
        )
    ],
    "time", timestamp,
    "evidence", create_map("process.pid", process_pid, "process.file.path", process_file_path, "process.file.name", process_file_name, "process.cmd_line", process_cmd_line, "actor.user.name", actor_user_name, "actor.process.pid", actor_process_pid, "actor.process.file.path", actor_process_file_path, "actor.process.file.name", actor_process_file_name, "device.hostname", device_hostname),
    "message", concat("Deny Permission using Cacls Utility has been triggered on ", device_hostname, " by ", actor_user_name, "."),
    "users", [
        create_map(
            "name", actor_user_name, "uid", ucast(map_get(actor_user,"uid"), "string", null)
        )
    ],
    "activity_id", 1,
    "category_uid", 2,
    "class_uid", 102001,
    "risk_level_id", 1,
    "risk_score", 35,
    "severity_id", 0,
    "rule", create_map("name", "Deny Permission using Cacls Utility", "uid", "b76eae28-cd25-11eb-9c92-acde48001122", "type", "Streaming"),
    "metadata", create_map("customer_uid", ucast(map_get(metadata,"customer_uid"), "string", null), "product", create_map("name", "Behavior Analytics", "vendor_name", "Splunk"), "version", "1.0.0-rc.2", "logged_time", time()),
    "type_uid", 10200101,
    "start_time", timestamp,
    "end_time", timestamp
  )
  | into write_ba_finding_events();'
how_to_implement: To successfully implement this search, you need to be ingesting
  logs with the process name, parent process, and command-line executions from your
  endpoints. If you are using Sysmon, you must have at least version 6.0.4 of the
  Sysmon TA. Tune and filter known instances where renamed icacls.exe may be used.
known_false_positives: System administrators may use cacls utilities but this is not
  a common practice. Filter as needed.
references:
- https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/
tags:
  required_fields:
  - process.pid
  - process.file.path
  - process.file.name
  - process.cmd_line
  - actor.user.name
  - actor.process.pid
  - actor.process.file.path
  - actor.process.file.name
  - device.hostname
  risk_score: 35
  security_domain: endpoint
  risk_severity: low
  research_site_url: https://research.splunk.com/endpoint/b76eae28-cd25-11eb-9c92-acde48001122/
  event_schema: ocsf
  mappings:
  - ocsf: process.pid
    cim: process_id
  - ocsf: process.file.path
    cim: process_path
  - ocsf: process.file.name
    cim: process_name
  - ocsf: process.cmd_line
    cim: process
  - ocsf: actor.user.name
    cim: user
  - ocsf: actor.process.pid
    cim: parent_process_id
  - ocsf: actor.process.file.path
    cim: parent_process_path
  - ocsf: actor.process.file.name
    cim: parent_process_name
  - ocsf: device.hostname
    cim: dest
  annotations:
    analytic_story:
    - XMRig
    - Information Sabotage
    cis20:
    - CIS 10
    kill_chain_phases:
    - Exploitation
    mitre_attack_id:
    - T1222
    nist:
    - DE.CM
test:
  name: Deny Permission using Cacls Utility Unit Test
  tests:
  - name: Deny Permission using Cacls Utility
    attack_data:
    - file_name: all_icalc.log
      data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1222.001/ssa_cacls/all_icalc.log
      source: WinEventLog:Security
runtime: SPL-DSP
