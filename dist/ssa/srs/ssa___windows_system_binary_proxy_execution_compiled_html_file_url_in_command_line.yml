name: Windows System Binary Proxy Execution Compiled HTML File URL In Command Line
id: 0fec631a-7c9b-4e4c-b28b-93260953e25f
version: 1
description: The following analytic identifies hh.exe (HTML Help) execution of a Compiled
  HTML Help (CHM) file from a remote url. This particular technique will load Windows
  script code from a compiled help file. CHM files may  contain nearly any file type
  embedded, but only execute html/htm. Upon a successful execution, the following
  script engines may be used for execution - JScript, VBScript, VBScript.Encode, JScript.Encode,
  JScript.Compact. Analyst may identify vbscript.dll or jscript.dll loading into hh.exe
  upon execution. The "htm" and "html" file extensions were the only extensions observed
  to be supported for the execution of Shortcut commands or WSH script code. During
  investigation, identify script content origination. Review reputation of remote
  IP and domain. Some instances, it is worth decompiling the .chm file to review its
  original contents. hh.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.
search: ' | from read_ba_enriched_events() | eval timestamp = ucast(map_get(input_event,"time"),"long",
  null) | eval metadata = ucast(map_get(input_event, "metadata"),"map<string, any>",
  null) | eval metadata_uid = ucast(map_get(metadata, "uid"),"string", null) | eval
  process=ucast(map_get(input_event,"process"), "map<string, any>", null) | eval process_pid=ucast(map_get(process,"pid"),
  "string", null) | eval process_file=ucast(map_get(process,"file"), "map<string,
  any>", null) | eval process_file_path=ucast(map_get(process_file,"path"), "string",
  null) | eval process_file_name=ucast(map_get(process_file,"name"), "string", null)
  | eval process_cmd_line=ucast(map_get(process,"cmd_line"), "string", null) | eval
  process_user=ucast(map_get(process,"user"), "map<string, any>", null) | eval process_user_name=ucast(map_get(process_user,"name"),
  "string", null) | eval actor=ucast(map_get(input_event,"actor"), "map<string, any>",
  null) | eval actor_process=ucast(map_get(actor,"process"), "map<string, any>", null)
  | eval actor_process_pid=ucast(map_get(actor_process,"pid"), "string", null) | eval
  actor_process_file=ucast(map_get(actor_process,"file"), "map<string, any>", null)
  | eval actor_process_file_path=ucast(map_get(actor_process_file,"path"), "string",
  null) | eval actor_process_file_name=ucast(map_get(actor_process_file,"name"), "string",
  null) | eval device=ucast(map_get(input_event,"device"), "map<string, any>", null)
  | eval device_hostname=ucast(map_get(device,"hostname"), "string", null) | where
  (like(process_cmd_line, "%https://%") OR like(process_cmd_line, "%http://%")) AND
  process_file_name="hh.exe" 
  | eval body=create_map(
    "devices", [
        create_map(
            "hostname", device_hostname, "type_id", 0, "uuid", ucast(map_get(device,"uuid"), "string", null)
        )
    ],
    "time", timestamp,
    "evidence", create_map("process.user.name", process_user_name, "device.hostname", device_hostname, "process.file.name", process_file_name, "process.cmd_line", process_cmd_line),
    "message", concat("Windows System Binary Proxy Execution Compiled HTML File URL In Command Line has been triggered on ", device_hostname, " by ", process_user_name, "."),
    "users", [
        create_map(
            "name", process_user_name, "uuid", ucast(map_get(process_user,"uuid"), "string", null)
        )
    ],
    "activity_id", 1,
    "category_uid", 2,
    "class_uid", 102001,
    "risk_level_id", 4,
    "risk_score", 90,
    "severity_id", 0,
    "rule", create_map("name", "Windows System Binary Proxy Execution Compiled HTML File URL In Command Line", "uid", "0fec631a-7c9b-4e4c-b28b-93260953e25f", "type", "Streaming"),
    "metadata", create_map("customer_uid", ucast(map_get(metadata,"customer_uid"), "string", null), "product", create_map("name", "Behavior Analytics", "vendor_name", "Splunk"), "version", "1.0.0-rc.2", "logged_time", time()),
    "type_uid", 10200101,
    "start_time", timestamp,
    "end_time", timestamp
  )
  | into write_ba_finding_events();'
how_to_implement: To successfully implement this search, you need to be ingesting
  logs with the process name, parent process, and command-line executions from your
  endpoints. If you are using Sysmon, you must have at least version 6.0.4 of the
  Sysmon TA.
known_false_positives: Although unlikely, some legitimate applications may retrieve
  a CHM remotely, filter as needed.
references:
- https://attack.mitre.org/techniques/T1218/001/
- https://www.kb.cert.org/vuls/id/851869
- https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.001/T1218.001.md
- https://lolbas-project.github.io/lolbas/Binaries/Hh/
- https://gist.github.com/mgeeky/cce31c8602a144d8f2172a73d510e0e7
- https://web.archive.org/web/20220119133748/https://cyberforensicator.com/2019/01/20/silence-dissecting-malicious-chm-files-and-performing-forensic-analysis/
tags:
  required_fields:
  - process.user.name
  - device.hostname
  - process.file.name
  - process.cmd_line
  risk_score: 90
  security_domain: endpoint
  risk_severity: high
  research_site_url: https://research.splunk.com/endpoint/0fec631a-7c9b-4e4c-b28b-93260953e25f/
  event_schema: ocsf
  mappings:
  - ocsf: process.pid
    cim: process_id
  - ocsf: process.file.path
    cim: process_path
  - ocsf: process.file.name
    cim: process_name
  - ocsf: process.cmd_line
    cim: process
  - ocsf: process.user.name
    cim: user
  - ocsf: actor.process.pid
    cim: parent_process_id
  - ocsf: actor.process.file.path
    cim: parent_process_path
  - ocsf: actor.process.file.name
    cim: parent_process_name
  - ocsf: device.hostname
    cim: dest
  annotations:
    analytic_story:
    - Suspicious Compiled HTML Activity
    - Living Off The Land
    cis20:
    - CIS 10
    kill_chain_phases:
    - Exploitation
    mitre_attack_id:
    - T1218.001
    - T1218
    nist:
    - DE.CM
test:
  name: Windows System Binary Proxy Execution Compiled HTML File URL In Command Line
    Unit Test
  tests:
  - name: Windows System Binary Proxy Execution Compiled HTML File URL In Command
      Line
    attack_data:
    - file_name: chm-wineventlog-security.log
      data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1218.001/atomic_red_team/chm-wineventlog-security.log
      source: WinEventLog:Security
runtime: SPL-DSP
