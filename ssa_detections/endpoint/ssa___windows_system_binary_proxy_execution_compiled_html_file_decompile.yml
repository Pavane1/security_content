name: Windows System Binary Proxy Execution Compiled HTML File Decompile
id: 11c32b19-05a6-48a8-ab28-18dbd9ec5d50
version: 1
date: '2022-09-02'
author: Michael Haag, Splunk
type: TTP
status: production
description: The following analytic identifies the decompile parameter with the HTML
  Help application, HH.exe. This is a uncommon command to see ran and behavior. Most
  recently this was seen in a APT41 campaign where a CHM file was delivered and a
  script inside used a technique for running an arbitrary command in a CHM file via
  an ActiveX object. This unpacks an HTML help file to a specified path for launching
  the next stage.
data_source:
- Windows Security 4688
search: ' | from read_ba_enriched_events() | eval timestamp = ucast(map_get(input_event,"time"),"long",
  null) | eval metadata = ucast(map_get(input_event, "metadata"),"map<string, any>",
  null) | eval metadata_uid = ucast(map_get(metadata, "uid"),"string", null) | eval
  process=ucast(map_get(input_event,"process"), "map<string, any>", null) | eval process_pid=ucast(map_get(process,"pid"),
  "string", null) | eval process_file=ucast(map_get(process,"file"), "map<string,
  any>", null) | eval process_file_path=ucast(map_get(process_file,"path"), "string",
  null) | eval process_file_name=ucast(map_get(process_file,"name"), "string", null)
  | eval process_cmd_line=ucast(map_get(process,"cmd_line"), "string", null) | eval
  process_user=ucast(map_get(process,"user"), "map<string, any>", null) | eval process_user_name=ucast(map_get(process_user,"name"),
  "string", null) | eval actor=ucast(map_get(input_event,"actor"), "map<string, any>",
  null) | eval actor_process=ucast(map_get(actor,"process"), "map<string, any>", null)
  | eval actor_process_pid=ucast(map_get(actor_process,"pid"), "string", null) | eval
  actor_process_file=ucast(map_get(actor_process,"file"), "map<string, any>", null)
  | eval actor_process_file_path=ucast(map_get(actor_process_file,"path"), "string",
  null) | eval actor_process_file_name=ucast(map_get(actor_process_file,"name"), "string",
  null) | eval device=ucast(map_get(input_event,"device"), "map<string, any>", null)
  | eval device_hostname=ucast(map_get(device,"hostname"), "string", null) | where
  like(process_cmd_line, "%-decompile%") AND process_file_name="hh.exe" --finding_report--'
how_to_implement: To successfully implement this search, you need to be ingesting
  logs with the process name, parent process, and command-line executions from your
  endpoints. If you are using Sysmon, you must have at least version 6.0.4 of the
  Sysmon TA.
known_false_positives: False positives should be limited, filter as needed.
references:
- https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/higaisa-or-winnti-apt-41-backdoors-old-and-new/
- https://redcanary.com/blog/introducing-atomictestharnesses/
- https://attack.mitre.org/techniques/T1218/001/
- https://docs.microsoft.com/en-us/windows/win32/api/htmlhelp/nf-htmlhelp-htmlhelpa
tags:
  analytic_story:
  - Suspicious Compiled HTML Activity
  - Living Off The Land
  asset_type: Endpoint
  confidence: 90
  impact: 100
  message: $process_name$ has been identified using decompile against a CHM on $dest_device_id$
    under user $dest_user_id$.
  mitre_attack_id:
  - T1218.001
  - T1218
  observable:
  - name: process.user.name
    type: User Name
  - name: device.hostname
    type: Hostname
  - name: process.file.name
    type: File
  - name: process.cmd_line
    type: Other
  product:
  - Splunk Behavioral Analytics
  required_fields:
  - process.user.name
  - device.hostname
  - process.file.name
  - process.cmd_line
  risk_score: 90
  security_domain: endpoint
  mappings:
  - ocsf: process.pid
    cim: process_id
  - ocsf: process.file.path
    cim: process_path
  - ocsf: process.file.name
    cim: process_name
  - ocsf: process.cmd_line
    cim: process
  - ocsf: process.user.name
    cim: user
  - ocsf: actor.process.pid
    cim: parent_process_id
  - ocsf: actor.process.file.path
    cim: parent_process_path
  - ocsf: actor.process.file.name
    cim: parent_process_name
  - ocsf: device.hostname
    cim: dest
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1218.001/atomic_red_team/4688_windows-security.log
    source: XmlWinEventLog
