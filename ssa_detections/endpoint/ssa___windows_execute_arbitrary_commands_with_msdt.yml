name: Windows Execute Arbitrary Commands with MSDT
id: f253f9c2-10f0-4cc8-b469-f505ba8c2038
version: 1
date: '2022-09-15'
author: Michael Haag, Splunk
type: TTP
status: production
description: The following analytic identifies a recently disclosed arbitraty command
  execution using Windows msdt.exe - a Diagnostics Troubleshooting Wizard. The sample
  identified will use the ms-msdt:/ protocol handler to load msdt.exe to retrieve
  a remote payload. During triage, review file modifications for html. Identify parallel
  process execution that may be related, including an Office Product.
data_source:
- Windows Security 4688
search: ' | from read_ba_enriched_events() | eval timestamp = ucast(map_get(input_event,"time"),"long",
  null) | eval metadata = ucast(map_get(input_event, "metadata"),"map<string, any>",
  null) | eval metadata_uid = ucast(map_get(metadata, "uid"),"string", null) | eval
  process=ucast(map_get(input_event,"process"), "map<string, any>", null) | eval process_pid=ucast(map_get(process,"pid"),
  "string", null) | eval process_file=ucast(map_get(process,"file"), "map<string,
  any>", null) | eval process_file_path=ucast(map_get(process_file,"path"), "string",
  null) | eval process_file_name=ucast(map_get(process_file,"name"), "string", null)
  | eval process_cmd_line=ucast(map_get(process,"cmd_line"), "string", null) | eval
  actor=ucast(map_get(input_event,"actor"), "map<string, any>", null) | eval actor_user=ucast(map_get(actor,"user"),
  "map<string, any>", null) | eval actor_user_name=ucast(map_get(actor_user,"name"),
  "string", null) | eval actor_process=ucast(map_get(actor,"process"), "map<string,
  any>", null) | eval actor_process_pid=ucast(map_get(actor_process,"pid"), "string",
  null) | eval actor_process_file=ucast(map_get(actor_process,"file"), "map<string,
  any>", null) | eval actor_process_file_path=ucast(map_get(actor_process_file,"path"),
  "string", null) | eval actor_process_file_name=ucast(map_get(actor_process_file,"name"),
  "string", null) | eval device=ucast(map_get(input_event,"device"), "map<string,
  any>", null) | eval device_hostname=ucast(map_get(device,"hostname"), "string",
  null) | where ((like(process_cmd_line, "%ms-msdt:/id%") OR like(process_cmd_line,
  "%ms-msdt:-id%") OR like(process_cmd_line, "%ms-msdt:/id%") OR like(process_cmd_line,
  "%ms-msdt:%") OR like(process_cmd_line, "%msdt%")) AND process_file_name="msdt.exe")
  AND (match_regex(process_cmd_line, /(?i).xml/)=true OR match_regex(process_cmd_line,
  /(?i)it_rebrowseforfile=/)=true OR match_regex(process_cmd_line, /(?i)it_browseforfile=/)=true)
  AND match_regex(process_cmd_line, /(?i)pcwdiagnostic/)=true --finding_report--'
how_to_implement: To successfully implement this search, you need to be ingesting
  logs with the process name, parent process, and command-line executions from your
  endpoints. If you are using Sysmon, you must have at least version 6.0.4 of the
  Sysmon TA.
known_false_positives: False positives may be present, filter as needed. Added .xml
  to potentially capture any answer file usage. Remove as needed.
references:
- https://isc.sans.edu/diary/rss/28694
- https://doublepulsar.com/follina-a-microsoft-office-code-execution-vulnerability-1a47fce5629e
- https://twitter.com/nao_sec/status/1530196847679401984?s=20&t=ZiXYI4dQuA-0_dzQzSUb3A
- https://app.any.run/tasks/713f05d2-fe78-4b9d-a744-f7c133e3fafb/
- https://www.virustotal.com/gui/file/4a24048f81afbe9fb62e7a6a49adbd1faf41f266b5f9feecdceb567aec096784/detection
- https://strontic.github.io/xcyclopedia/library/msdt.exe-152D4C9F63EFB332CCB134C6953C0104.html
tags:
  analytic_story:
  - Microsoft Support Diagnostic Tool Vulnerability CVE-2022-30190
  asset_type: Endpoint
  confidence: 100
  impact: 100
  message: $process_name$ on $dest_device_id$ under user $dest_user_id$ possibly indicative
    of indirect command execution.
  mitre_attack_id:
  - T1218
  observable:
  - name: process.pid
    type: Other
  - name: process.file.path
    type: File
  - name: process.file.name
    type: File
  - name: process.cmd_line
    type: Other
  - name: actor.user.name
    type: User Name
  - name: actor.process.pid
    type: Other
  - name: actor.process.file.path
    type: File Name
  - name: actor.process.file.name
    type: File Name
  - name: device.hostname
    type: Hostname
  product:
  - Splunk Behavioral Analytics
  required_fields:
  - process.pid
  - process.file.path
  - process.file.name
  - process.cmd_line
  - actor.user.name
  - actor.process.pid
  - actor.process.file.path
  - actor.process.file.name
  - device.hostname
  risk_score: 100
  security_domain: endpoint
  mappings:
  - ocsf: process.pid
    cim: process_id
  - ocsf: process.file.path
    cim: process_path
  - ocsf: process.file.name
    cim: process_name
  - ocsf: process.cmd_line
    cim: process
  - ocsf: actor.user.name
    cim: user
  - ocsf: actor.process.pid
    cim: parent_process_id
  - ocsf: actor.process.file.path
    cim: parent_process_path
  - ocsf: actor.process.file.name
    cim: parent_process_name
  - ocsf: device.hostname
    cim: dest
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1566.001/macro/msdt-windows-security.log
    source: XmlWinEventLog
    sourcetype: XmlWinEventLog
