name: Authentication DM Distributed Password Spray
id: b1a82fc8-8a9f-4344-9ec2-bde5c5331b57
version: 1
date: '2023-11-01'
author: Dean Luxton
status: experimental
type: Hunting
data_source:
- Authentication Datamodel
description: This analytic uses the 3-sigma approach to detect a distributed password spray attack. Utilising the authentication datamodel this detection is affective for all CIM mapped authication events.
search: '| tstats `security_content_summariesonly` dc(Authentication.user) AS unique_accounts dc(Authentication.src) as unique_src count(Authentication.user) as total_failures from datamodel=Authentication.Authentication where Authentication.action="failure" by Authentication.action, Authentication.signature_id, sourcetype, _time  span=2m
  | `drop_dm_object_name("Authentication")`
  ```fill out time buckets for 0-count events during entire search length```
  | appendpipe [| timechart limit=0 span=5m count | table _time]
  | fillnull value=0 unique_accounts, unique_src
  ``` remove duplicate & empty time buckets```
  | sort - total_failures
  | dedup _time
  ``` Create aggregation field & apply to all null events```
  | eval counter=sourcetype+"__"+signature_id
  | eventstats values(counter) as fnscounter | eval counter=coalesce(counter,fnscounter)
  ``` 3-sigma detection logic ```
  | eventstats avg(unique_accounts) as comp_avg_user , stdev(unique_accounts) as comp_std_user avg(unique_src) as comp_avg_src , stdev(unique_src) as comp_std_src by counter
  | eval upperBoundUser=(comp_avg_user+comp_std_user*3), upperBoundsrc=(comp_avg_src+comp_std_src*3)
  | eval isOutlier=if((unique_accounts > 30 and unique_accounts >= upperBoundUser) and (unique_src > 30 and unique_accounts >= upperBoundsrc), 1, 0)
  | replace "::ffff:*" with * in src
  | where isOutlier=1
  | foreach * 
      [ eval <<FIELD>> = if(<<FIELD>>="null",null(),<<FIELD>>)] 
  | table _time, action, unique_src, unique_accounts, total_failures, sourcetype, signature_id, isOutlier, upperBoundUser, upperBoundsrc, comp_avg_user, comp_avg_src, comp_std_user, comp_std_src
  | sort - total_failures | `authentication_dm_distributed_password_spray_filter`'
how_to_implement: Ensure in-scope authentication data is CIM mapped and the src field is populated with the source device. Also ensure fill_nullvalue is set within the macro security_content_summariesonly. 
known_false_positives: Mondays.
references:
- https://attack.mitre.org/techniques/T1110/003/
tags:
  analytic_story:
  - Compromised User Account
  - Active Directory Password Spraying
  asset_type: Endpoint
  atomic_guid:
  - 90bc2e54-6c84-47a5-9439-0a2a92b4b175
  confidence: 70
  impact: 70
  message: This is not a risk rule 
  mitre_attack_id:
  - T1110.003
  - T1110
  observable:
  - name: src
    type: Endpoint
    role:
    - Attacker
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  risk_score: 49
  required_fields:
  - Authentication.action
  - Authentication.user
  - Authentication.src
  security_domain: access
